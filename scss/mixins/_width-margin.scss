/* Mixins de width. 
* Se maneja por porcentajes si no se cambia el segundo parametro.
* Para usar fracciones hay que cambiar el segundo parametro ; tercero para el mixin que es con breakpoints; 
* a un n√∫mero mayor que 1 
**/

//Base
@mixin width($numerador:100,$denominador:1){
  @if $denominador <= 1 {
    width: unquote($numerador + "%");
  } @else {
    width: ($numerador / $denominador) * 100%;
  }
}

//Con breakpoints
@mixin breakpoints($size, $numerador:100,$denominador:1) {
  @media all and (min-width: map-has-key($breakpoints,$size)) {
    @if $denominador <= 1 {
      width: unquote($numerador + "%");
    } @else {
      width: ($numerador / $denominador) * 100%;
    }
  }  
}

// Multibles combinaciones de margin.
@mixin margin($top, $right, $bottom, $left) {
  @if $top + $bottom == 0 {
    margin-right  : $right;
    margin-left   : $left;
  } @else if $right + $left == 0 {
    margin-top    : $top; 
    margin-bottom : $bottom;
  } @else if $top + $right == 0 {
    margin-bottom : $bottom;
    margin-left   : $left;
  } @else if $top + $left == 0 { 
    margin-right  : $right;
    margin-bottom : $bottom;
  } @else if $bottom + $left == 0 {
    margin-top    : $top; 
    margin-right  : $right;
  } @else if $right + $bottom == 0 {
    margin-top    : $top; 
    margin-left   : $left;
  } @else if $top == 0 { 
    margin-right  : $right;
    margin-bottom : $bottom;
    margin-left   : $left;
  } @else if $right == 0 {
    margin-top    : $top; 
    margin-bottom : $bottom;
    margin-left   : $left;
  } @else if $bottom == 0 {
    margin-top    : $top; 
    margin-right  : $right;
    margin-left   : $left;
  } @else if $left == 0 {
    margin-top    : $top; 
    margin-right  : $right;
    margin-bottom : $bottom;
  } @else {
    margin : $top $right $bottom $left;
  }
}
